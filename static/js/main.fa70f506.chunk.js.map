{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","timeZone","location","onClick","href","htmlLink","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","OfflineAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","numberOfEvents","number","updateNumberofEvents","e","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","navigator","onLine","data","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","App","currentLocation","shownEvents","slice","newNumberOfEvents","mounted","isTokenValid","OfflineAlertText","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.fa70f506.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  handleClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state\n\n    return <div className=\"event\" >\n\n<h2 className=\"summary\">{event.summary}</h2>\n        <p className=\"start-date\">\n          {event.start.dateTime} ({event.start.timeZone})\n        </p>\n        <p className=\"location\">\n          @{event.summary} | {event.location}\n        </p>\n\n        <button\n          className={`${collapsed ? \"show\" : \"hide\"}-details-btn`}\n          onClick={this.handleClick}\n        >\n          {collapsed ? \"Show Details\" : \"Hide Details\"}\n        </button>\n        {!collapsed && <div className={`extra-details show`}>\n              <a href={event.htmlLink}>\n                See details on Google Calendar\n              </a>\n              <p className=\"event-description\">{event.description}</p>\n            </div>\n          }\n    </div>;\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n    </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\n\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\n\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'fc1303';\n  }\n\n}\n\nexport { InfoAlert, ErrorAlert, OfflineAlert }\n\n","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined,\n    infoText: ''\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: ''\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <h2>Search city</h2>\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)} >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    numberOfEvents: 32,\n    infoText: ''\n  }\n\n  handleInputChanged = (event) => {\n    const number = event.target.value;\n    if (number <= 0 || number > 32) {\n      this.setState({\n        numberOfEvents: number,\n        infoText: 'Choose number between 1 and 32'\n      });\n    } else {\n      this.setState({\n        numberOfEvents: number,\n        infoText: ''\n      });\n      this.props.updateNumberofEvents(number);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <p>Change number of shown events between 1-32\n        </p>\n\n        <input type=\"number\" value={this.state.numberOfEvents} className=\"newValue\" onChange={(e) => this.handleInputChanged(e)} />\n        <p><ErrorAlert text={this.state.infoText} /></p>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n\n   {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   }\n\n];\nexport { mockData };","\nimport { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n/*\nThis function takes an events array, then uses map to create a new array with only locations.\nIt will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\nThe Set will remove all duplicates from the array.\n*/\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  // when user is not online (is offline) show last viewd eevnts from local storage\n  if (!navigator.onLine) {\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data ? JSON.parse(data).events : [];;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://atjg9skto5.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n\n  const accessToken = localStorage.getItem('access_token');\n\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://atjg9skto5.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://atjg9skto5.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","import React from \"react\";\nimport './WelcomeScreen.css';\nfunction WelcomeScreen(props) {\n  return props.showWelcomeScreen ?\n    (\n      <div className=\"WelcomeScreen\">\n        <h1>Welcome to the Meet app</h1>\n        <h4>\n          Log in to see upcoming events around the world for\n          full-stack\n          developers\n        </h4>\n        <div className=\"button_cont\" align=\"center\">\n          <div class=\"google-btn\">\n            <div class=\"google-icon-wrapper\">\n              <img\n                class=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\no.svg\"\n                alt=\"Google sign-in\"\n              />\n            </div>\n            <button onClick={() => { props.getAccessToken() }}\n              rel=\"nofollow noopener\"\n              class=\"btn-text\"\n            >\n              <b>Sign in with google</b>\n            </button>\n          </div>\n        </div>\n        <a\n          href=\"https://ilukin89.github.io/meet/privacy.html\"\n          rel=\"nofollow noopener\"\n        >\n          Privacy policy\n        </a>\n      </div>)\n    : null\n}\nexport default WelcomeScreen;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\nimport { OfflineAlert } from './Alert';\n\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: 'all',\n    showWelcomeScreen: undefined\n  }\n\n  // Function for updating the events state when a city is selected\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      const shownEvents = locationEvents.slice(0, this.state.numberOfEvents);\n      this.setState({\n        events: shownEvents,\n        currentLocation: location\n      });\n    });\n  }\n\n  // Function to update the number of events displaying on the page when the user inputs a new number\n\n  updateNumberofEvents = (newNumberOfEvents) => {\n    this.setState({\n      numberOfEvents: newNumberOfEvents\n    });\n    this.updateEvents(this.state.currentLocation);\n  }\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false :\n      true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events, locations: extractLocations(events) });\n        }\n      });\n    }\n    if (!navigator.onLine) {\n      this.setState({\n        OfflineAlertText: 'You are not connected to the Internet'\n      });\n    } else {\n      this.setState({\n        OfflineAlertText: ''\n      });\n    }\n    // getEvents().then((events) => {\n    //   const { numberOfEvents } = this.state;\n    //   if (this.mounted) {\n    //     const locationEvents = events.slice(0, numberOfEvents);\n    //     this.setState({\n    //       events: locationEvents,\n    //       locations: extractLocations(events)\n    //     });\n    //   }\n    // });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return <div\n      className=\"App\" />\n    const { numberOfEvents, locations, events, OfflineAlertText } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Meet App</h1>\n        <CitySearch locations={locations} updateEvents={this.updateEvents} />\n        <EventList events={events} />\n        <OfflineAlert text={OfflineAlertText} />\n        <NumberOfEvents updateNumberofEvents={this.updateNumberofEvents} numberOfEvents={numberOfEvents} />\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\n          getAccessToken={() => { getAccessToken() }} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import * as serviceWorker from './service-worker';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport * as atatus from 'atatus-spa';\n\n\nReactDOM.render(<HashRouter>\n  <App />\n</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n// serviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\natatus.config('b9f4e77f68894ba4b928e2a9e22f00f4').install();\n"],"sourceRoot":""}